ARM GAS  /tmp/ccchAvFn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART1_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART1_UART_Init:
  27              	.LFB130:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2025 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_tx;
  29:Core/Src/usart.c **** 
  30:Core/Src/usart.c **** /* USART1 init function */
ARM GAS  /tmp/ccchAvFn.s 			page 2


  31:Core/Src/usart.c **** 
  32:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  33:Core/Src/usart.c **** {
  29              		.loc 1 33 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  36:Core/Src/usart.c **** 
  37:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  38:Core/Src/usart.c **** 
  39:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  40:Core/Src/usart.c **** 
  41:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  42:Core/Src/usart.c ****   huart1.Instance = USART1;
  37              		.loc 1 42 3 view .LVU1
  38              		.loc 1 42 19 is_stmt 0 view .LVU2
  39 0002 0B48     		ldr	r0, .L5
  40 0004 0B4B     		ldr	r3, .L5+4
  41 0006 0360     		str	r3, [r0]
  43:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  42              		.loc 1 43 3 is_stmt 1 view .LVU3
  43              		.loc 1 43 24 is_stmt 0 view .LVU4
  44 0008 4FF4E133 		mov	r3, #115200
  45 000c 4360     		str	r3, [r0, #4]
  44:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  46              		.loc 1 44 3 is_stmt 1 view .LVU5
  47              		.loc 1 44 26 is_stmt 0 view .LVU6
  48 000e 0023     		movs	r3, #0
  49 0010 8360     		str	r3, [r0, #8]
  45:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  50              		.loc 1 45 3 is_stmt 1 view .LVU7
  51              		.loc 1 45 24 is_stmt 0 view .LVU8
  52 0012 C360     		str	r3, [r0, #12]
  46:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  53              		.loc 1 46 3 is_stmt 1 view .LVU9
  54              		.loc 1 46 22 is_stmt 0 view .LVU10
  55 0014 0361     		str	r3, [r0, #16]
  47:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX;
  56              		.loc 1 47 3 is_stmt 1 view .LVU11
  57              		.loc 1 47 20 is_stmt 0 view .LVU12
  58 0016 0822     		movs	r2, #8
  59 0018 4261     		str	r2, [r0, #20]
  48:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  60              		.loc 1 48 3 is_stmt 1 view .LVU13
  61              		.loc 1 48 25 is_stmt 0 view .LVU14
  62 001a 8361     		str	r3, [r0, #24]
  49:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  63              		.loc 1 49 3 is_stmt 1 view .LVU15
  64              		.loc 1 49 28 is_stmt 0 view .LVU16
  65 001c C361     		str	r3, [r0, #28]
  50:Core/Src/usart.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
ARM GAS  /tmp/ccchAvFn.s 			page 3


  66              		.loc 1 50 3 is_stmt 1 view .LVU17
  67              		.loc 1 50 30 is_stmt 0 view .LVU18
  68 001e 0362     		str	r3, [r0, #32]
  51:Core/Src/usart.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  69              		.loc 1 51 3 is_stmt 1 view .LVU19
  70              		.loc 1 51 38 is_stmt 0 view .LVU20
  71 0020 4362     		str	r3, [r0, #36]
  52:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  72              		.loc 1 52 3 is_stmt 1 view .LVU21
  73              		.loc 1 52 7 is_stmt 0 view .LVU22
  74 0022 FFF7FEFF 		bl	HAL_UART_Init
  75              	.LVL0:
  76              		.loc 1 52 6 view .LVU23
  77 0026 00B9     		cbnz	r0, .L4
  78              	.L1:
  53:Core/Src/usart.c ****   {
  54:Core/Src/usart.c ****     Error_Handler();
  55:Core/Src/usart.c ****   }
  56:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  57:Core/Src/usart.c **** 
  58:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  59:Core/Src/usart.c **** 
  60:Core/Src/usart.c **** }
  79              		.loc 1 60 1 view .LVU24
  80 0028 08BD     		pop	{r3, pc}
  81              	.L4:
  54:Core/Src/usart.c ****   }
  82              		.loc 1 54 5 is_stmt 1 view .LVU25
  83 002a FFF7FEFF 		bl	Error_Handler
  84              	.LVL1:
  85              		.loc 1 60 1 is_stmt 0 view .LVU26
  86 002e FBE7     		b	.L1
  87              	.L6:
  88              		.align	2
  89              	.L5:
  90 0030 00000000 		.word	.LANCHOR0
  91 0034 00380140 		.word	1073821696
  92              		.cfi_endproc
  93              	.LFE130:
  95              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  96              		.align	1
  97              		.global	HAL_UART_MspInit
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu fpv4-sp-d16
 103              	HAL_UART_MspInit:
 104              	.LVL2:
 105              	.LFB131:
  61:Core/Src/usart.c **** 
  62:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  63:Core/Src/usart.c **** {
 106              		.loc 1 63 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 32
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		.loc 1 63 1 is_stmt 0 view .LVU28
ARM GAS  /tmp/ccchAvFn.s 			page 4


 111 0000 10B5     		push	{r4, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 4, -8
 114              		.cfi_offset 14, -4
 115 0002 88B0     		sub	sp, sp, #32
 116              		.cfi_def_cfa_offset 40
  64:Core/Src/usart.c **** 
  65:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 117              		.loc 1 65 3 is_stmt 1 view .LVU29
 118              		.loc 1 65 20 is_stmt 0 view .LVU30
 119 0004 0023     		movs	r3, #0
 120 0006 0393     		str	r3, [sp, #12]
 121 0008 0493     		str	r3, [sp, #16]
 122 000a 0593     		str	r3, [sp, #20]
 123 000c 0693     		str	r3, [sp, #24]
 124 000e 0793     		str	r3, [sp, #28]
  66:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 125              		.loc 1 66 3 is_stmt 1 view .LVU31
 126              		.loc 1 66 16 is_stmt 0 view .LVU32
 127 0010 0268     		ldr	r2, [r0]
 128              		.loc 1 66 5 view .LVU33
 129 0012 234B     		ldr	r3, .L13
 130 0014 9A42     		cmp	r2, r3
 131 0016 01D0     		beq	.L11
 132              	.LVL3:
 133              	.L7:
  67:Core/Src/usart.c ****   {
  68:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
  69:Core/Src/usart.c **** 
  70:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
  71:Core/Src/usart.c ****     /* USART1 clock enable */
  72:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
  73:Core/Src/usart.c **** 
  74:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  75:Core/Src/usart.c ****     /**USART1 GPIO Configuration
  76:Core/Src/usart.c ****     PA9     ------> USART1_TX
  77:Core/Src/usart.c ****     PA10     ------> USART1_RX
  78:Core/Src/usart.c ****     */
  79:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  81:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  82:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  83:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
  84:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  85:Core/Src/usart.c **** 
  86:Core/Src/usart.c ****     /* USART1 DMA Init */
  87:Core/Src/usart.c ****     /* USART1_TX Init */
  88:Core/Src/usart.c ****     hdma_usart1_tx.Instance = DMA1_Channel4;
  89:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
  90:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
  91:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
  92:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  93:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
  94:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
  95:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
  96:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
  97:Core/Src/usart.c ****     {
ARM GAS  /tmp/ccchAvFn.s 			page 5


  98:Core/Src/usart.c ****       Error_Handler();
  99:Core/Src/usart.c ****     }
 100:Core/Src/usart.c **** 
 101:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 102:Core/Src/usart.c **** 
 103:Core/Src/usart.c ****     /* USART1 interrupt Init */
 104:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 105:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 106:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 107:Core/Src/usart.c **** 
 108:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 109:Core/Src/usart.c ****   }
 110:Core/Src/usart.c **** }
 134              		.loc 1 110 1 view .LVU34
 135 0018 08B0     		add	sp, sp, #32
 136              		.cfi_remember_state
 137              		.cfi_def_cfa_offset 8
 138              		@ sp needed
 139 001a 10BD     		pop	{r4, pc}
 140              	.LVL4:
 141              	.L11:
 142              		.cfi_restore_state
 143              		.loc 1 110 1 view .LVU35
 144 001c 0446     		mov	r4, r0
  72:Core/Src/usart.c **** 
 145              		.loc 1 72 5 is_stmt 1 view .LVU36
 146              	.LBB2:
  72:Core/Src/usart.c **** 
 147              		.loc 1 72 5 view .LVU37
  72:Core/Src/usart.c **** 
 148              		.loc 1 72 5 view .LVU38
 149 001e 03F55843 		add	r3, r3, #55296
 150 0022 9A69     		ldr	r2, [r3, #24]
 151 0024 42F48042 		orr	r2, r2, #16384
 152 0028 9A61     		str	r2, [r3, #24]
  72:Core/Src/usart.c **** 
 153              		.loc 1 72 5 view .LVU39
 154 002a 9A69     		ldr	r2, [r3, #24]
 155 002c 02F48042 		and	r2, r2, #16384
 156 0030 0192     		str	r2, [sp, #4]
  72:Core/Src/usart.c **** 
 157              		.loc 1 72 5 view .LVU40
 158 0032 019A     		ldr	r2, [sp, #4]
 159              	.LBE2:
  72:Core/Src/usart.c **** 
 160              		.loc 1 72 5 view .LVU41
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 161              		.loc 1 74 5 view .LVU42
 162              	.LBB3:
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 163              		.loc 1 74 5 view .LVU43
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 164              		.loc 1 74 5 view .LVU44
 165 0034 5A69     		ldr	r2, [r3, #20]
 166 0036 42F40032 		orr	r2, r2, #131072
 167 003a 5A61     		str	r2, [r3, #20]
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
ARM GAS  /tmp/ccchAvFn.s 			page 6


 168              		.loc 1 74 5 view .LVU45
 169 003c 5B69     		ldr	r3, [r3, #20]
 170 003e 03F40033 		and	r3, r3, #131072
 171 0042 0293     		str	r3, [sp, #8]
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 172              		.loc 1 74 5 view .LVU46
 173 0044 029B     		ldr	r3, [sp, #8]
 174              	.LBE3:
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 175              		.loc 1 74 5 view .LVU47
  79:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 176              		.loc 1 79 5 view .LVU48
  79:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 177              		.loc 1 79 25 is_stmt 0 view .LVU49
 178 0046 4FF4C063 		mov	r3, #1536
 179 004a 0393     		str	r3, [sp, #12]
  80:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 180              		.loc 1 80 5 is_stmt 1 view .LVU50
  80:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 80 26 is_stmt 0 view .LVU51
 182 004c 0223     		movs	r3, #2
 183 004e 0493     		str	r3, [sp, #16]
  81:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 184              		.loc 1 81 5 is_stmt 1 view .LVU52
  82:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 185              		.loc 1 82 5 view .LVU53
  82:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 186              		.loc 1 82 27 is_stmt 0 view .LVU54
 187 0050 0323     		movs	r3, #3
 188 0052 0693     		str	r3, [sp, #24]
  83:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 189              		.loc 1 83 5 is_stmt 1 view .LVU55
  83:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 190              		.loc 1 83 31 is_stmt 0 view .LVU56
 191 0054 0723     		movs	r3, #7
 192 0056 0793     		str	r3, [sp, #28]
  84:Core/Src/usart.c **** 
 193              		.loc 1 84 5 is_stmt 1 view .LVU57
 194 0058 03A9     		add	r1, sp, #12
 195 005a 4FF09040 		mov	r0, #1207959552
 196              	.LVL5:
  84:Core/Src/usart.c **** 
 197              		.loc 1 84 5 is_stmt 0 view .LVU58
 198 005e FFF7FEFF 		bl	HAL_GPIO_Init
 199              	.LVL6:
  88:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 200              		.loc 1 88 5 is_stmt 1 view .LVU59
  88:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 201              		.loc 1 88 29 is_stmt 0 view .LVU60
 202 0062 1048     		ldr	r0, .L13+4
 203 0064 104B     		ldr	r3, .L13+8
 204 0066 0360     		str	r3, [r0]
  89:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 205              		.loc 1 89 5 is_stmt 1 view .LVU61
  89:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 206              		.loc 1 89 35 is_stmt 0 view .LVU62
 207 0068 1023     		movs	r3, #16
ARM GAS  /tmp/ccchAvFn.s 			page 7


 208 006a 4360     		str	r3, [r0, #4]
  90:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 209              		.loc 1 90 5 is_stmt 1 view .LVU63
  90:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 210              		.loc 1 90 35 is_stmt 0 view .LVU64
 211 006c 0023     		movs	r3, #0
 212 006e 8360     		str	r3, [r0, #8]
  91:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 213              		.loc 1 91 5 is_stmt 1 view .LVU65
  91:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 214              		.loc 1 91 32 is_stmt 0 view .LVU66
 215 0070 8022     		movs	r2, #128
 216 0072 C260     		str	r2, [r0, #12]
  92:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 217              		.loc 1 92 5 is_stmt 1 view .LVU67
  92:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 218              		.loc 1 92 45 is_stmt 0 view .LVU68
 219 0074 0361     		str	r3, [r0, #16]
  93:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 220              		.loc 1 93 5 is_stmt 1 view .LVU69
  93:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 221              		.loc 1 93 42 is_stmt 0 view .LVU70
 222 0076 4361     		str	r3, [r0, #20]
  94:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 223              		.loc 1 94 5 is_stmt 1 view .LVU71
  94:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 224              		.loc 1 94 30 is_stmt 0 view .LVU72
 225 0078 8361     		str	r3, [r0, #24]
  95:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 226              		.loc 1 95 5 is_stmt 1 view .LVU73
  95:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 227              		.loc 1 95 34 is_stmt 0 view .LVU74
 228 007a C361     		str	r3, [r0, #28]
  96:Core/Src/usart.c ****     {
 229              		.loc 1 96 5 is_stmt 1 view .LVU75
  96:Core/Src/usart.c ****     {
 230              		.loc 1 96 9 is_stmt 0 view .LVU76
 231 007c FFF7FEFF 		bl	HAL_DMA_Init
 232              	.LVL7:
  96:Core/Src/usart.c ****     {
 233              		.loc 1 96 8 view .LVU77
 234 0080 58B9     		cbnz	r0, .L12
 235              	.L9:
 101:Core/Src/usart.c **** 
 236              		.loc 1 101 5 is_stmt 1 view .LVU78
 101:Core/Src/usart.c **** 
 237              		.loc 1 101 5 view .LVU79
 238 0082 084B     		ldr	r3, .L13+4
 239 0084 2367     		str	r3, [r4, #112]
 101:Core/Src/usart.c **** 
 240              		.loc 1 101 5 view .LVU80
 241 0086 5C62     		str	r4, [r3, #36]
 101:Core/Src/usart.c **** 
 242              		.loc 1 101 5 view .LVU81
 104:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 243              		.loc 1 104 5 view .LVU82
 244 0088 0022     		movs	r2, #0
ARM GAS  /tmp/ccchAvFn.s 			page 8


 245 008a 1146     		mov	r1, r2
 246 008c 2520     		movs	r0, #37
 247 008e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 248              	.LVL8:
 105:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 249              		.loc 1 105 5 view .LVU83
 250 0092 2520     		movs	r0, #37
 251 0094 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 252              	.LVL9:
 253              		.loc 1 110 1 is_stmt 0 view .LVU84
 254 0098 BEE7     		b	.L7
 255              	.L12:
  98:Core/Src/usart.c ****     }
 256              		.loc 1 98 7 is_stmt 1 view .LVU85
 257 009a FFF7FEFF 		bl	Error_Handler
 258              	.LVL10:
 259 009e F0E7     		b	.L9
 260              	.L14:
 261              		.align	2
 262              	.L13:
 263 00a0 00380140 		.word	1073821696
 264 00a4 00000000 		.word	.LANCHOR1
 265 00a8 44000240 		.word	1073872964
 266              		.cfi_endproc
 267              	.LFE131:
 269              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 270              		.align	1
 271              		.global	HAL_UART_MspDeInit
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	HAL_UART_MspDeInit:
 278              	.LVL11:
 279              	.LFB132:
 111:Core/Src/usart.c **** 
 112:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 113:Core/Src/usart.c **** {
 280              		.loc 1 113 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 114:Core/Src/usart.c **** 
 115:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 284              		.loc 1 115 3 view .LVU87
 285              		.loc 1 115 16 is_stmt 0 view .LVU88
 286 0000 0268     		ldr	r2, [r0]
 287              		.loc 1 115 5 view .LVU89
 288 0002 0C4B     		ldr	r3, .L22
 289 0004 9A42     		cmp	r2, r3
 290 0006 00D0     		beq	.L21
 291 0008 7047     		bx	lr
 292              	.L21:
 113:Core/Src/usart.c **** 
 293              		.loc 1 113 1 view .LVU90
 294 000a 10B5     		push	{r4, lr}
 295              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccchAvFn.s 			page 9


 296              		.cfi_offset 4, -8
 297              		.cfi_offset 14, -4
 298 000c 0446     		mov	r4, r0
 116:Core/Src/usart.c ****   {
 117:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 118:Core/Src/usart.c **** 
 119:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 120:Core/Src/usart.c ****     /* Peripheral clock disable */
 121:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 299              		.loc 1 121 5 is_stmt 1 view .LVU91
 300 000e 0A4A     		ldr	r2, .L22+4
 301 0010 9369     		ldr	r3, [r2, #24]
 302 0012 23F48043 		bic	r3, r3, #16384
 303 0016 9361     		str	r3, [r2, #24]
 122:Core/Src/usart.c **** 
 123:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 124:Core/Src/usart.c ****     PA9     ------> USART1_TX
 125:Core/Src/usart.c ****     PA10     ------> USART1_RX
 126:Core/Src/usart.c ****     */
 127:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 304              		.loc 1 127 5 view .LVU92
 305 0018 4FF4C061 		mov	r1, #1536
 306 001c 4FF09040 		mov	r0, #1207959552
 307              	.LVL12:
 308              		.loc 1 127 5 is_stmt 0 view .LVU93
 309 0020 FFF7FEFF 		bl	HAL_GPIO_DeInit
 310              	.LVL13:
 128:Core/Src/usart.c **** 
 129:Core/Src/usart.c ****     /* USART1 DMA DeInit */
 130:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 311              		.loc 1 130 5 is_stmt 1 view .LVU94
 312 0024 206F     		ldr	r0, [r4, #112]
 313 0026 FFF7FEFF 		bl	HAL_DMA_DeInit
 314              	.LVL14:
 131:Core/Src/usart.c **** 
 132:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 133:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 315              		.loc 1 133 5 view .LVU95
 316 002a 2520     		movs	r0, #37
 317 002c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 318              	.LVL15:
 134:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 135:Core/Src/usart.c **** 
 136:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 137:Core/Src/usart.c ****   }
 138:Core/Src/usart.c **** }
 319              		.loc 1 138 1 is_stmt 0 view .LVU96
 320 0030 10BD     		pop	{r4, pc}
 321              	.LVL16:
 322              	.L23:
 323              		.loc 1 138 1 view .LVU97
 324 0032 00BF     		.align	2
 325              	.L22:
 326 0034 00380140 		.word	1073821696
 327 0038 00100240 		.word	1073876992
 328              		.cfi_endproc
 329              	.LFE132:
ARM GAS  /tmp/ccchAvFn.s 			page 10


 331              		.global	hdma_usart1_tx
 332              		.global	huart1
 333              		.section	.bss.hdma_usart1_tx,"aw",%nobits
 334              		.align	2
 335              		.set	.LANCHOR1,. + 0
 338              	hdma_usart1_tx:
 339 0000 00000000 		.space	68
 339      00000000 
 339      00000000 
 339      00000000 
 339      00000000 
 340              		.section	.bss.huart1,"aw",%nobits
 341              		.align	2
 342              		.set	.LANCHOR0,. + 0
 345              	huart1:
 346 0000 00000000 		.space	136
 346      00000000 
 346      00000000 
 346      00000000 
 346      00000000 
 347              		.text
 348              	.Letext0:
 349              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 350              		.file 3 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 351              		.file 4 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 352              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 353              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 354              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 355              		.file 8 "Core/Inc/usart.h"
 356              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 357              		.file 10 "Core/Inc/main.h"
ARM GAS  /tmp/ccchAvFn.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccchAvFn.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccchAvFn.s:26     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccchAvFn.s:90     .text.MX_USART1_UART_Init:0000000000000030 $d
     /tmp/ccchAvFn.s:96     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccchAvFn.s:103    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccchAvFn.s:263    .text.HAL_UART_MspInit:00000000000000a0 $d
     /tmp/ccchAvFn.s:270    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccchAvFn.s:277    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccchAvFn.s:326    .text.HAL_UART_MspDeInit:0000000000000034 $d
     /tmp/ccchAvFn.s:338    .bss.hdma_usart1_tx:0000000000000000 hdma_usart1_tx
     /tmp/ccchAvFn.s:345    .bss.huart1:0000000000000000 huart1
     /tmp/ccchAvFn.s:334    .bss.hdma_usart1_tx:0000000000000000 $d
     /tmp/ccchAvFn.s:341    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
